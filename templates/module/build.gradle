apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.oss.licenses.plugin'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    
    defaultConfig {
        applicationId "%s"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode rootProject.ext.gitVersionCode
        versionName rootProject.ext.gitVersionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        disable 'NewApi' // gradle build will compile code use `Objects.requireNonNull()` for lambda
        abortOnError true
        xmlReport true
        xmlOutput project.file('build/reports/lint/lint-report.xml')
        htmlReport true
        htmlOutput project.file('build/reports/lint/lint-report.html')
        lintConfig file("${project.rootDir}/quality/lint/lint.xml")
    }
    testOptions.unitTests {
        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }
            jvmArgs '-noverify'
        }
        returnDefaultValues = true
    }
}

dependencies {
    debugImplementation rootProject.ext.appLibraries.leakCanary
    debugImplementation rootProject.ext.appLibraries.stetho
    
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation(rootProject.ext.appTest.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation rootProject.ext.appLibraries.supportAppCompat
    implementation rootProject.ext.appLibraries.constraintLayout
    implementation rootProject.ext.appLibraries.timber
    implementation rootProject.ext.appLibraries.butterknife
    annotationProcessor rootProject.ext.appLibraries.butterknifeProcessor
    implementation rootProject.ext.appLibraries.ossLicenses

    testImplementation rootProject.ext.appTest.junit
    testImplementation rootProject.ext.appTest.mockito
}
